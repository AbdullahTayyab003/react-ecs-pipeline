---
name: Build and Push to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./.build/git_update.sh -v minor

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-app
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


    - name: Download current ECS task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition react-ecs-task \
          --query taskDefinition > task-def.json

    - name: Update task definition with new image
      run: |
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/my-app:${{ steps.increment-git-tag.outputs.git-tag }}"

        cat task-def.json | jq --arg IMAGE "$IMAGE_URI" '
          .containerDefinitions[0].image = $IMAGE |
          del(
            .status, 
            .revision, 
            .taskDefinitionArn, 
            .requiresAttributes, 
            .compatibilities, 
            .registeredAt, 
            .registeredBy
          )' > new-task-def.json

    - name: Register new ECS task definition
      run: |
        aws ecs register-task-definition \
          --cli-input-json file://new-task-def.json > task-def-out.json

    - name: Update ECS service with new task definition
      run: |
        NEW_TASK_DEF_ARN=$(cat task-def-out.json | jq -r '.taskDefinition.taskDefinitionArn')

        aws ecs update-service \
          --cluster react-ecs-cluster \
          --service react-ecs-task-service \
          --task-definition $NEW_TASK_DEF_ARN \
          --force-new-deployment    
